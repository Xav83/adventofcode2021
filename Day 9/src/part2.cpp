#include <algorithm>
#include <array>
#include <cassert>
#include <iostream>
#include <limits>
#include <numeric>
#include <string>
#include <string_view>
#include <vector>

using Input = std::array<std::array<int, 100>, 100>;

std::vector<int> getAdjacentValuesTo(Input input, size_t x_pos, size_t y_pos) {
    std::vector<int> adjacents;

    if(x_pos != 0) { adjacents.emplace_back(input[x_pos-1][y_pos]); }
    if(y_pos != 0) { adjacents.emplace_back(input[x_pos][y_pos-1]); }
    if(x_pos != input.size()-1) { adjacents.emplace_back(input[x_pos+1][y_pos]); }
    if(y_pos != input.front().size()-1) { adjacents.emplace_back(input[x_pos][y_pos+1]); }

    return adjacents;
}

bool isLowPoint(Input input, size_t x_pos, size_t y_pos) {
    auto adjacents = getAdjacentValuesTo(input, x_pos, y_pos);

    return input[x_pos][y_pos] < *std::min_element(std::begin(adjacents), std::end(adjacents));
}

constexpr Input input {{
{3,5,6,6,7,8,9,5,6,7,9,5,3,2,1,2,6,7,9,8,7,5,6,8,9,9,7,6,6,5,1,0,1,3,6,7,9,3,2,9,8,7,6,4,0,4,5,6,8,9,9,9,8,8,4,5,6,8,9,1,0,2,4,9,7,9,8,6,8,9,9,2,1,9,8,9,7,8,9,9,9,0,1,3,4,5,7,8,9,2,3,5,5,7,8,9,9,7,6,7},
{2,6,7,5,8,9,5,4,5,6,8,9,4,3,3,4,5,9,8,7,6,4,9,9,9,8,6,5,4,3,2,1,2,4,5,6,7,9,1,9,9,9,5,3,2,3,7,8,9,4,9,8,7,6,5,7,7,9,9,9,1,9,9,8,6,5,4,5,7,8,8,9,9,7,6,6,6,7,8,9,8,1,2,4,5,6,7,8,9,1,2,3,4,6,7,8,9,6,5,6},
{1,2,3,4,9,9,6,3,4,5,7,8,9,4,4,5,6,7,9,9,8,9,8,9,9,9,7,6,5,4,3,5,3,4,6,7,8,9,9,8,9,9,9,4,6,4,5,6,9,3,2,9,8,7,6,8,9,9,9,8,9,8,9,7,6,4,3,6,5,9,7,8,9,9,5,4,5,6,9,8,7,6,4,5,6,8,9,9,1,0,1,2,3,7,8,9,1,2,3,5},
{0,1,2,5,6,7,9,2,3,4,5,7,9,6,5,9,7,8,9,9,9,8,7,8,9,9,8,8,7,5,4,7,5,5,8,8,9,7,6,7,8,9,8,9,6,5,6,7,8,9,1,2,9,8,7,9,9,8,9,7,6,7,9,9,5,3,2,3,4,5,6,8,9,8,2,3,6,7,8,9,8,6,5,6,7,9,8,4,3,5,2,3,4,6,9,3,2,9,9,6},
{2,3,3,6,7,9,8,9,4,5,6,8,9,8,6,7,8,9,4,9,8,7,6,7,9,7,9,8,7,6,8,8,8,7,9,9,8,6,5,4,9,6,7,8,9,9,8,8,9,9,2,3,4,9,8,9,8,7,6,5,4,6,7,8,9,9,0,1,6,7,8,9,9,7,6,4,7,8,9,9,9,8,9,8,8,9,7,5,4,4,3,4,5,7,8,9,9,8,8,9},
{3,5,7,8,9,8,7,9,9,9,7,9,5,9,7,8,9,3,2,9,7,6,5,8,9,6,5,9,8,7,9,9,9,8,9,9,9,5,4,3,4,5,6,7,9,9,9,9,9,8,9,4,9,8,9,9,9,8,5,4,3,4,5,7,7,8,9,2,7,8,9,9,9,8,7,6,7,9,9,9,8,9,6,9,9,8,7,6,5,9,5,6,6,7,9,8,9,6,7,9},
{4,5,6,9,8,7,6,7,8,8,9,5,4,3,9,9,9,9,9,7,6,5,4,7,9,6,4,5,9,9,0,2,3,9,9,9,8,7,5,4,8,9,9,8,9,9,9,9,8,7,8,9,8,7,8,9,8,7,6,3,2,3,4,5,6,7,8,9,8,9,9,9,8,9,9,8,9,9,9,8,7,6,5,4,3,9,9,7,9,8,9,8,7,9,8,7,6,5,6,8},
{5,8,7,9,8,5,4,5,6,7,8,9,4,1,2,3,9,8,9,8,9,7,5,6,8,9,2,4,9,2,1,6,7,8,9,1,9,9,9,5,7,9,9,9,9,8,9,9,9,6,9,9,8,6,9,8,6,5,4,2,1,2,3,4,5,8,9,1,9,9,9,9,7,8,2,9,8,9,9,9,9,8,7,3,2,1,0,9,8,7,8,9,9,7,6,5,4,3,4,7},
{6,9,9,8,6,4,2,4,5,8,9,6,3,2,3,9,8,7,6,9,9,8,7,7,9,2,1,9,7,9,3,5,9,9,9,3,9,8,7,6,7,8,9,3,9,7,6,8,9,5,6,9,6,5,4,9,9,7,6,4,2,3,4,5,6,9,1,0,1,9,8,7,5,2,1,5,6,8,9,3,4,9,8,8,3,3,1,9,7,6,8,9,9,8,7,6,5,6,5,6},
{8,9,9,9,8,4,3,5,7,9,6,5,4,5,6,9,7,6,5,7,8,9,8,9,9,9,9,8,6,8,9,9,7,8,8,9,9,9,9,7,8,9,9,4,9,8,5,3,4,4,5,8,9,3,2,3,9,8,5,4,3,4,5,6,7,8,9,2,2,9,7,6,4,3,0,3,4,7,8,9,5,9,7,6,5,4,9,8,7,5,7,8,8,9,8,7,6,7,6,7},
{9,9,9,9,9,5,4,6,7,8,9,7,5,8,7,8,9,7,4,5,6,7,9,8,9,8,7,6,5,6,8,3,5,6,7,8,9,2,4,9,9,8,8,9,8,7,6,2,1,2,6,7,8,9,1,3,9,7,6,8,6,5,6,7,8,9,8,9,9,6,5,4,3,2,1,2,3,6,7,8,9,9,8,8,9,9,8,7,6,4,5,6,7,8,9,8,8,9,7,8},
{9,9,8,9,9,7,5,6,7,9,9,8,6,9,8,9,8,9,3,4,5,9,8,7,8,9,7,6,4,2,1,2,4,8,9,9,3,1,4,9,8,7,7,8,9,6,5,3,2,3,5,6,9,5,3,9,9,8,7,8,9,6,8,9,9,4,6,9,8,7,7,5,5,3,2,5,4,5,6,7,8,9,9,9,8,7,6,6,4,3,6,3,5,9,9,9,9,9,9,9},
{8,8,7,8,9,8,9,8,9,9,9,9,8,9,9,8,7,8,2,3,9,8,9,6,7,8,9,5,3,1,0,2,3,7,7,8,9,2,3,9,9,6,6,9,8,7,6,4,6,4,5,7,9,6,9,8,6,9,8,9,8,7,9,0,1,2,3,4,9,9,8,6,9,4,5,6,5,6,7,8,9,6,9,8,7,7,5,4,3,2,1,2,6,9,8,9,8,9,4,3},
{7,5,6,7,8,9,2,9,9,9,8,8,9,8,9,6,5,3,1,2,9,7,6,5,6,7,8,9,4,3,1,5,4,5,6,7,8,9,9,8,7,5,5,3,9,8,7,5,8,5,6,8,9,7,9,8,5,4,9,4,9,9,3,2,3,3,4,9,3,1,9,9,8,9,7,9,8,7,8,9,4,5,7,9,6,5,4,3,2,1,0,1,9,8,7,8,7,8,9,2},
{6,4,5,4,6,9,3,4,9,8,7,6,6,7,8,9,3,2,0,1,9,8,9,6,7,9,9,8,6,9,8,6,5,6,8,9,9,8,7,6,5,3,4,2,3,9,8,7,8,9,7,8,9,9,8,7,6,3,2,3,8,9,9,5,4,4,9,8,9,2,3,9,7,9,9,9,9,8,9,3,2,3,9,8,7,6,9,5,4,2,3,2,3,9,6,7,6,8,9,0},
{4,3,4,3,9,8,9,9,8,7,6,5,5,9,9,6,4,3,1,2,3,9,9,9,8,9,4,9,8,9,8,7,6,8,9,9,8,7,6,4,3,2,1,0,1,2,9,8,9,9,8,9,6,7,9,8,9,4,3,4,6,7,8,9,5,9,8,7,8,9,9,8,6,8,9,7,9,9,3,2,1,2,3,9,8,9,8,6,7,3,4,5,9,8,5,4,5,7,8,9},
{4,2,1,2,4,6,7,9,8,6,4,3,4,8,9,7,5,4,5,3,5,6,9,9,9,2,3,5,9,7,9,8,7,9,8,9,9,9,6,5,4,3,2,1,2,4,9,9,4,3,9,4,5,6,7,9,8,5,4,5,6,8,9,7,6,7,9,6,5,9,8,7,5,6,5,6,8,9,9,4,2,4,9,9,9,9,9,7,8,6,5,6,9,7,4,3,4,6,7,9},
{4,1,0,1,3,4,7,8,9,7,3,2,3,7,8,9,6,5,7,4,6,7,8,9,2,1,2,3,4,6,7,9,8,9,7,9,9,8,7,7,6,5,6,7,3,4,7,8,9,2,1,2,3,7,8,9,7,6,5,6,9,9,9,8,7,9,6,5,4,9,8,6,4,3,4,5,6,7,8,9,4,9,8,9,8,9,9,8,9,8,6,9,8,6,5,2,3,4,5,9},
{3,2,1,2,3,5,6,7,8,9,5,9,5,6,7,8,9,9,8,9,7,9,9,9,9,9,9,4,9,9,9,9,9,5,6,7,8,9,9,8,8,6,7,6,4,5,6,7,8,9,3,4,9,8,9,2,9,8,6,7,8,9,9,9,9,8,7,6,5,9,7,6,4,2,3,4,5,6,7,8,9,8,7,5,7,9,9,9,2,9,7,9,8,7,5,3,4,6,7,8},
{4,5,3,4,5,9,8,8,9,9,9,8,9,7,8,9,9,9,9,5,9,7,8,9,8,7,8,9,8,7,8,9,5,4,5,7,9,8,9,9,9,9,8,7,5,6,8,8,9,8,9,9,8,9,1,0,2,9,7,8,9,9,9,5,4,9,9,7,6,9,8,7,2,1,2,5,6,7,9,9,9,9,5,4,5,7,8,9,3,9,8,9,9,7,6,4,5,6,8,9},
{5,6,4,5,6,7,8,9,7,8,9,7,8,9,9,9,8,9,7,4,5,6,9,8,7,6,7,8,9,6,9,6,4,3,4,9,9,7,9,8,7,8,9,8,8,7,9,9,8,7,8,9,7,8,9,9,3,9,8,9,9,9,8,9,9,9,8,9,9,8,7,6,1,0,1,6,9,8,9,9,8,7,6,7,8,9,9,5,4,9,9,9,9,8,7,5,6,9,9,7},
{9,8,9,6,7,8,9,6,5,4,7,6,9,9,9,9,7,8,5,3,4,9,8,7,6,5,1,3,4,5,7,9,6,5,9,8,7,6,8,9,6,7,8,9,9,8,9,9,7,6,7,5,6,8,9,8,9,9,9,9,9,9,6,9,8,7,7,8,9,9,8,4,3,1,2,7,8,9,8,8,9,8,7,8,9,3,2,9,9,8,6,8,9,9,9,8,7,8,9,6},
{5,9,9,8,9,9,6,5,4,3,4,5,7,7,8,9,6,5,4,2,9,8,7,6,5,4,2,5,5,7,8,9,7,6,7,9,8,8,9,6,5,6,7,8,9,9,8,7,6,5,3,4,9,9,6,7,8,9,9,9,8,7,5,3,7,6,6,7,9,7,6,5,4,2,3,8,9,8,7,6,4,9,8,9,9,9,9,8,7,9,5,7,8,9,8,9,8,9,6,5},
{4,6,9,9,7,6,4,5,3,2,3,4,5,6,7,8,9,7,9,1,2,9,9,8,6,6,3,4,9,8,9,4,9,8,8,9,9,9,7,5,4,8,9,9,8,6,9,8,7,3,2,9,8,9,4,3,4,5,9,8,7,6,4,2,3,4,5,9,8,9,7,6,5,6,4,9,8,9,8,4,3,4,9,9,9,8,7,6,5,3,4,6,7,9,7,9,9,2,3,4},
{2,9,8,7,6,4,3,2,1,0,1,5,6,7,8,9,9,9,8,9,3,4,8,9,9,8,5,6,8,9,2,3,4,9,9,8,7,6,8,4,3,4,9,8,6,5,6,9,6,4,9,8,7,8,9,2,3,4,5,9,6,5,2,1,2,3,5,6,7,8,9,9,6,7,5,6,7,8,9,6,4,6,7,9,8,7,6,5,4,2,3,2,3,5,6,7,8,9,6,5},
{0,1,9,8,6,5,4,3,2,1,7,8,9,8,9,8,9,9,7,8,9,6,7,9,8,7,6,8,9,5,0,2,3,4,9,9,8,5,4,3,2,9,8,7,6,4,9,8,7,9,8,7,6,7,6,9,9,5,7,8,9,4,3,2,3,4,5,9,8,9,9,8,7,8,9,7,9,9,9,8,5,9,9,8,7,6,5,4,2,1,0,1,8,9,8,9,9,8,7,6},
{1,2,3,9,9,6,8,6,4,5,6,7,8,9,8,7,9,8,6,8,9,7,8,9,9,9,7,8,9,3,1,2,9,9,8,9,7,6,5,4,3,9,9,5,4,3,4,9,9,8,7,6,5,4,5,7,8,9,9,9,7,6,4,6,5,5,9,8,9,1,0,9,8,9,9,8,9,6,4,9,9,8,9,9,9,7,6,6,3,2,3,5,6,8,9,9,8,9,9,8},
{5,3,4,9,8,9,8,7,5,7,9,8,9,9,7,6,5,4,5,7,8,9,9,3,4,5,9,9,8,9,2,9,8,9,7,8,9,7,7,5,9,8,7,6,3,2,9,8,9,7,6,5,4,3,4,5,9,9,8,9,8,9,6,8,6,9,8,7,8,9,9,8,9,7,9,9,7,6,5,9,8,7,8,9,9,8,7,8,5,4,5,6,7,9,3,5,7,9,8,9},
{7,4,9,8,7,8,9,8,6,8,9,9,8,9,8,8,6,3,7,9,9,6,5,4,9,9,8,9,7,8,9,8,7,8,6,7,8,9,8,9,8,9,8,3,2,1,9,7,6,6,5,3,2,2,3,4,7,6,7,8,9,9,7,9,8,9,9,6,7,8,9,7,5,6,9,9,8,7,9,9,7,6,6,7,8,9,8,9,8,5,7,7,9,0,2,3,9,8,7,8},
{9,9,8,7,6,6,8,9,9,9,9,8,7,6,9,4,3,2,9,6,8,9,9,9,8,8,7,9,6,7,9,7,6,5,4,5,7,8,9,9,7,6,5,4,9,3,4,9,5,4,3,1,0,1,2,3,4,5,9,9,1,9,8,9,9,9,8,5,6,7,9,9,4,9,8,9,9,9,8,1,0,4,5,8,9,0,9,9,7,6,7,9,8,9,9,9,8,7,6,5},
{9,8,9,8,5,5,6,7,8,9,8,7,6,5,4,2,1,0,4,5,7,9,8,9,7,6,5,7,5,6,7,9,3,1,2,6,6,7,8,9,8,7,9,9,8,9,9,8,7,6,5,4,2,2,3,4,5,7,8,9,2,4,9,9,8,7,6,4,5,6,7,8,9,8,7,9,8,7,6,3,2,3,6,7,9,2,3,9,8,9,9,8,7,9,8,9,9,6,5,4},
{8,7,6,7,3,4,7,9,9,4,9,8,7,9,6,9,2,2,3,4,5,6,7,8,9,5,4,3,4,5,9,8,9,2,3,4,5,8,9,9,9,9,8,7,7,9,8,9,8,6,5,4,3,3,6,5,6,7,9,5,4,9,3,1,9,6,4,3,4,5,6,9,8,7,6,7,9,6,5,4,3,4,5,8,9,3,4,5,9,9,9,7,6,8,6,9,8,9,2,3},
{7,6,4,3,2,4,5,8,9,3,2,9,9,8,9,8,9,9,9,9,6,8,8,9,7,6,5,1,6,6,9,7,8,9,4,5,6,7,8,9,9,8,7,6,6,7,7,9,9,7,6,5,5,5,9,6,9,8,9,6,9,8,9,9,9,8,6,5,5,6,7,8,9,6,5,6,9,8,7,6,7,5,6,8,9,4,8,9,9,8,7,6,5,6,5,6,7,9,1,2},
{9,8,4,4,1,5,6,7,8,9,3,4,9,7,6,7,9,8,7,8,9,9,9,9,8,7,6,9,8,9,8,6,7,9,6,6,7,9,9,9,8,7,6,5,4,5,6,8,7,9,8,6,7,9,8,9,8,9,9,9,9,7,6,8,9,8,7,6,8,7,8,9,6,5,4,6,7,9,8,9,8,9,7,9,7,6,7,9,8,7,6,5,4,3,4,5,8,9,0,1},
{9,9,2,1,0,7,8,8,9,5,4,9,7,6,5,9,8,7,6,7,7,8,9,9,9,8,9,9,9,8,7,5,6,8,9,7,8,9,1,0,9,8,7,6,3,2,4,5,6,9,9,8,9,8,7,6,7,8,9,8,9,6,5,6,7,9,8,7,9,8,9,9,8,6,3,4,5,6,9,9,9,9,8,9,8,9,8,9,9,8,7,6,5,2,3,4,5,8,9,2},
{8,7,6,2,1,3,5,9,9,6,5,6,9,4,4,3,1,2,4,5,6,7,8,9,9,9,8,9,8,7,6,4,6,7,8,9,9,9,9,9,7,9,8,3,2,1,2,6,9,8,9,9,9,7,6,5,6,7,8,7,8,9,4,3,8,9,9,9,9,9,7,9,8,7,6,5,6,7,8,9,3,4,9,9,9,8,9,3,2,9,8,7,9,3,4,5,6,7,8,9},
{9,8,5,4,3,4,5,7,8,9,9,9,8,3,2,1,0,1,2,4,5,6,9,9,8,7,6,9,7,6,5,3,2,6,7,9,8,9,8,7,6,5,4,2,1,0,1,9,8,7,8,7,8,9,8,4,3,4,5,6,9,9,4,2,9,9,6,9,8,7,6,5,9,8,8,6,7,8,9,9,2,3,5,9,8,7,8,9,1,0,9,6,5,4,5,6,7,9,9,6},
{8,7,6,5,6,5,6,8,9,9,8,7,6,5,3,2,1,2,6,5,6,7,8,9,9,8,4,9,9,5,4,2,0,4,5,6,7,8,9,9,9,6,5,3,2,1,9,8,7,6,5,6,7,8,9,2,1,3,4,6,7,8,9,9,7,8,5,6,9,8,5,4,3,9,9,7,8,9,6,8,9,9,9,7,6,6,7,8,9,9,8,7,9,8,7,7,8,9,3,5},
{9,8,7,7,8,9,7,9,8,7,9,8,7,6,7,3,2,3,4,8,7,8,9,1,2,9,9,8,7,6,5,3,2,3,4,7,8,9,8,9,8,9,6,4,3,2,3,9,8,7,6,7,8,9,6,3,2,3,4,5,6,9,9,7,6,5,4,9,8,7,6,8,5,7,9,8,9,4,5,6,9,8,9,6,4,5,6,7,9,2,9,8,9,9,8,9,9,9,2,1},
{6,9,9,8,9,9,8,9,7,6,8,9,8,9,9,8,5,4,9,9,9,9,8,9,9,8,9,9,9,7,6,5,3,4,8,8,9,8,7,5,7,9,6,5,6,3,5,6,9,8,7,8,9,7,5,4,3,4,5,6,7,8,9,6,5,4,3,2,9,9,8,7,6,8,9,9,4,3,4,9,9,7,8,5,3,5,9,8,9,1,9,9,1,0,9,7,9,8,9,2},
{4,5,9,9,6,5,9,9,8,5,4,4,9,9,8,7,6,7,8,9,4,5,7,9,8,7,8,9,9,8,7,6,4,5,6,7,8,9,6,4,8,9,7,6,7,8,9,7,8,9,8,9,8,7,6,5,4,5,6,7,8,9,7,6,4,3,1,0,1,2,9,9,7,9,6,5,4,2,9,8,7,6,2,1,2,9,8,9,9,9,8,5,3,2,3,5,6,7,8,9},
{6,9,7,6,5,4,5,9,7,6,2,3,2,3,9,8,7,8,9,4,3,2,9,8,7,6,7,9,8,9,8,7,6,8,7,8,9,9,8,5,6,7,9,9,8,9,9,9,9,4,9,1,9,8,7,6,5,7,7,8,9,9,9,8,6,7,9,1,9,3,9,9,9,9,8,6,2,1,0,9,9,5,3,0,4,8,7,8,9,8,7,6,5,4,8,9,8,9,9,1},
{9,8,9,8,6,7,9,9,8,4,1,0,1,2,3,9,8,9,4,3,2,0,9,7,6,5,4,5,7,8,9,8,7,9,9,9,1,9,7,6,8,9,9,9,9,9,7,8,9,2,1,0,1,9,9,8,7,9,9,9,7,8,9,9,7,9,8,9,7,9,8,9,3,2,9,7,3,9,9,8,7,3,2,1,3,4,6,7,8,9,8,7,8,5,7,8,9,9,9,0},
{9,7,8,9,7,9,8,6,4,3,2,1,2,4,4,9,9,6,5,4,4,9,8,6,5,4,3,4,5,9,9,9,8,9,2,1,0,9,8,7,9,9,9,8,9,7,6,9,8,9,3,1,2,4,9,9,9,5,6,7,6,7,8,9,9,8,7,6,6,8,7,8,9,1,9,8,9,8,9,9,6,5,3,2,5,6,7,9,9,4,9,8,9,6,8,9,9,9,8,9},
{8,6,9,8,9,8,7,6,5,4,3,2,3,4,9,8,9,7,9,5,6,7,9,9,7,3,2,3,4,7,8,9,9,4,3,9,1,2,9,8,9,8,7,6,5,3,5,6,7,9,9,2,3,9,8,7,6,4,5,4,5,8,9,8,9,7,6,5,5,5,6,7,8,9,4,9,9,7,9,8,7,6,5,6,6,7,8,9,9,2,3,9,8,7,9,8,9,7,6,7},
{7,5,7,7,8,9,8,7,6,5,4,3,4,9,8,7,6,9,8,9,8,9,9,8,6,5,1,0,5,6,7,8,9,5,9,8,9,9,9,9,9,8,9,7,4,2,4,5,5,6,8,9,9,9,9,9,7,3,1,3,6,9,5,7,9,6,5,4,3,4,5,9,9,1,2,9,8,6,4,9,8,7,8,9,8,8,9,9,8,1,2,4,9,8,9,7,7,9,4,6},
{4,3,4,6,5,6,9,9,8,6,5,6,5,9,9,6,5,6,7,8,9,9,9,6,5,4,3,2,4,5,6,9,9,9,9,7,9,8,9,9,9,7,6,5,4,1,2,3,4,5,6,7,8,9,3,4,9,2,0,1,2,3,4,9,9,9,4,3,2,5,9,8,9,2,3,9,7,5,3,4,9,8,9,9,9,9,7,5,7,0,1,4,6,9,7,6,5,4,3,5},
{3,2,6,5,4,5,5,6,9,7,6,7,9,8,7,5,4,5,6,8,9,9,8,7,6,5,6,3,5,6,7,8,9,8,7,6,7,7,8,9,8,7,6,4,2,0,1,2,5,7,8,9,9,3,2,9,8,7,3,2,4,5,9,8,9,8,9,2,0,2,6,7,8,9,9,8,5,4,2,3,4,9,8,9,9,9,7,4,2,1,2,3,5,9,8,8,9,5,7,6},
{2,1,0,1,2,3,4,9,9,8,7,9,8,7,5,4,3,4,7,6,8,9,9,8,9,6,7,5,6,7,8,9,8,7,6,4,5,6,9,8,7,6,5,4,3,1,3,4,5,6,7,8,9,2,1,9,8,6,4,3,4,9,8,7,5,7,8,9,1,4,5,6,8,9,8,7,3,2,1,2,3,5,7,9,9,8,6,5,3,4,3,4,5,6,9,9,8,9,8,8},
{3,2,1,2,6,4,9,8,9,9,8,9,9,6,5,4,2,3,6,5,7,8,9,9,8,7,9,9,7,8,9,7,9,8,5,3,4,5,7,9,8,7,6,5,4,2,7,6,7,8,9,9,5,1,0,3,9,7,6,7,5,9,9,6,4,6,7,9,2,5,6,7,9,9,6,5,4,3,0,1,2,4,6,7,8,9,7,6,6,5,9,7,6,7,9,8,7,8,9,9},
{5,4,3,4,5,9,8,7,9,9,9,8,7,6,3,2,1,2,5,4,6,7,8,9,9,8,9,9,8,9,7,6,5,4,3,2,5,6,7,8,9,9,8,6,5,9,8,7,8,9,9,6,4,2,1,2,9,8,7,8,9,8,9,4,3,4,8,8,9,7,7,8,9,8,7,6,5,7,6,4,3,4,6,7,9,9,8,9,8,9,8,9,7,9,8,7,6,7,8,9},
{6,5,4,9,9,8,7,6,7,9,8,7,6,5,4,5,0,1,2,3,4,5,9,9,9,9,9,8,9,8,9,8,6,5,4,5,6,7,8,9,9,9,9,7,7,8,9,8,9,9,8,7,6,9,2,3,4,9,8,9,8,7,8,9,2,5,6,7,8,9,8,9,6,9,8,7,7,9,7,6,7,8,9,9,9,8,9,9,9,8,7,8,9,9,7,6,5,4,6,6},
{7,6,9,8,8,9,6,5,6,7,9,8,7,6,5,2,1,2,3,6,5,6,7,8,9,9,7,7,6,7,8,9,7,6,5,6,7,8,9,8,7,8,9,9,9,9,0,9,7,8,9,8,9,8,9,6,5,6,9,8,9,6,9,8,9,6,7,8,9,7,9,9,5,4,9,8,9,4,9,8,9,9,8,7,8,7,8,9,8,7,5,9,8,7,6,5,4,3,5,5},
{9,9,8,7,6,2,3,4,5,6,7,9,9,7,4,3,2,4,5,7,7,8,8,9,8,8,6,7,5,4,5,9,8,7,8,7,8,9,9,8,6,7,8,7,8,9,1,5,6,9,8,9,8,7,8,9,6,9,7,6,8,4,5,6,9,9,8,9,7,5,7,8,9,3,4,9,4,2,1,9,5,6,9,6,5,6,9,7,6,5,4,5,9,9,7,7,6,2,3,4},
{8,9,7,6,5,1,2,3,4,6,9,8,7,6,5,4,3,5,6,9,8,9,9,8,7,6,5,4,4,3,4,6,9,9,9,8,9,6,9,7,5,4,7,6,7,9,3,4,5,9,7,6,9,6,7,8,9,9,6,5,4,3,4,5,7,8,9,6,5,4,2,4,8,9,9,6,5,3,2,3,4,9,8,7,6,7,8,9,5,2,3,4,9,8,7,6,5,4,5,5},
{7,6,5,4,4,0,1,4,6,7,9,9,9,7,6,7,4,6,7,8,9,3,3,9,8,7,6,3,1,2,3,4,9,8,7,9,8,7,9,8,5,3,4,5,6,8,9,5,9,8,7,5,6,5,6,9,8,7,8,6,5,2,5,7,8,9,9,7,3,2,0,5,6,7,8,9,9,4,5,6,5,6,9,8,7,8,9,4,3,1,2,3,4,9,8,7,6,8,7,8},
{8,7,4,3,2,1,2,3,7,8,9,9,9,8,9,9,8,7,9,9,3,2,1,0,9,8,5,4,0,1,2,9,9,8,6,7,9,9,8,7,3,2,3,5,7,8,9,9,8,7,6,4,3,4,5,9,7,6,7,7,2,1,3,6,6,7,8,9,4,3,1,6,7,8,9,9,8,9,6,7,6,7,8,9,8,9,5,4,2,0,1,9,5,6,9,8,7,8,8,9},
{9,8,5,4,4,3,4,4,5,6,7,9,9,9,7,5,9,8,9,7,9,9,3,4,9,7,5,4,1,2,9,8,7,6,5,9,8,7,6,5,4,3,5,7,8,9,9,9,9,8,7,9,1,0,9,8,6,5,3,2,1,0,2,4,5,9,9,9,5,5,3,8,9,9,9,8,7,9,7,8,9,8,9,4,9,9,6,9,3,1,9,8,9,9,9,9,8,9,9,9},
{8,7,6,6,7,8,9,5,7,8,9,9,9,6,5,4,3,9,4,6,9,8,9,5,9,8,4,3,2,9,8,7,6,5,4,3,9,9,8,9,5,4,6,9,9,9,8,9,9,9,9,8,9,1,3,9,7,5,4,5,3,2,4,5,6,8,9,8,6,7,8,9,9,9,8,9,6,8,9,9,9,9,4,3,9,8,7,8,4,9,8,6,7,8,9,9,9,6,7,8},
{9,8,9,8,9,9,7,6,7,9,9,9,8,9,7,9,2,1,3,9,9,7,8,9,9,6,5,4,3,4,9,6,5,4,3,2,3,4,9,8,7,5,7,8,9,8,7,8,9,9,9,7,9,2,9,9,8,9,9,6,4,3,6,6,7,9,5,9,7,8,9,3,9,8,7,6,5,7,9,9,8,9,9,2,3,9,8,9,9,8,7,5,6,9,8,9,7,5,3,2},
{9,9,8,9,6,9,8,7,8,9,9,8,7,6,5,4,3,3,9,8,9,6,7,9,8,7,6,5,7,9,8,7,6,6,4,3,7,5,6,9,9,6,8,9,3,5,6,7,9,9,7,6,7,9,8,9,9,9,8,7,8,4,7,9,8,9,4,5,9,9,1,2,3,9,8,9,4,6,8,7,6,7,8,9,4,6,9,8,6,7,5,4,5,8,7,8,9,4,2,1},
{9,8,7,6,5,4,9,8,9,2,3,9,8,7,6,9,4,9,8,7,6,5,6,8,9,9,8,6,7,8,9,9,7,6,5,4,5,8,7,9,8,7,9,5,4,6,9,8,9,8,7,5,7,8,7,8,9,9,9,9,6,5,8,9,9,6,5,7,8,9,0,9,4,9,9,7,3,9,8,6,5,6,7,8,9,9,8,6,4,3,6,3,5,8,6,7,9,5,1,0},
{9,9,9,5,4,3,4,9,2,1,2,3,9,8,9,8,9,9,8,6,5,4,7,8,7,8,9,8,9,9,7,6,9,8,9,7,6,7,8,9,9,8,9,6,5,9,8,9,9,7,7,4,6,5,6,8,9,9,9,8,7,6,9,7,9,7,6,7,9,9,9,8,9,8,7,5,2,3,4,4,4,5,6,9,8,9,5,4,3,2,1,2,4,6,5,7,8,9,2,1},
{9,8,7,6,5,4,5,6,9,0,1,2,3,9,8,7,9,8,7,5,4,3,4,5,6,7,9,9,4,3,4,5,6,9,9,8,9,8,9,0,1,9,9,8,9,8,7,9,8,6,5,3,2,4,5,9,9,8,6,9,8,9,7,6,8,9,7,9,9,9,8,7,7,9,9,3,1,0,1,2,3,4,5,6,7,8,9,6,2,1,0,1,2,3,4,6,7,8,9,2},
{0,9,9,8,7,6,6,7,8,9,4,3,9,8,9,6,9,8,7,6,5,2,3,4,5,6,7,9,3,2,3,6,9,8,9,9,9,9,7,9,9,8,8,9,8,7,6,4,9,8,7,4,0,6,7,8,9,3,5,6,9,7,6,5,7,9,8,9,9,8,9,6,6,7,8,9,2,4,5,6,4,5,7,9,8,9,5,4,3,2,1,2,3,4,6,7,9,9,9,3},
{1,2,3,9,9,7,7,8,9,6,5,9,8,7,6,5,7,9,8,7,6,1,4,5,7,9,8,9,2,1,2,9,9,7,8,9,7,6,5,8,7,6,7,9,8,6,5,3,4,9,6,4,2,4,9,9,3,2,4,6,9,9,5,4,3,1,9,9,8,7,8,4,5,9,7,8,9,6,6,9,5,6,7,8,9,7,6,5,5,4,3,3,7,6,8,9,6,7,8,9},
{3,3,9,9,7,9,8,9,9,9,9,7,7,5,5,4,5,6,9,8,9,2,5,6,7,8,9,4,1,0,9,8,8,6,9,9,7,6,4,3,4,5,7,9,5,4,3,2,3,9,7,5,9,5,7,8,9,1,3,9,8,7,6,5,4,3,4,5,9,6,5,3,4,7,6,7,8,9,7,8,8,7,9,9,0,9,8,7,7,5,4,4,5,7,8,9,5,9,9,2},
{4,9,8,7,6,6,9,4,9,8,7,6,5,4,3,2,4,9,8,7,7,3,4,5,9,9,4,3,2,9,8,7,6,5,7,8,9,4,3,2,1,2,9,8,6,5,4,3,4,5,9,9,8,7,8,9,1,0,1,2,9,9,7,6,5,4,5,6,9,9,7,2,1,4,5,6,9,9,8,9,9,9,3,2,1,5,9,9,8,6,5,5,9,8,9,9,9,8,9,3},
{5,7,9,6,4,4,2,3,4,9,8,7,4,3,2,1,9,8,7,6,5,4,7,6,7,8,9,4,9,9,8,6,5,4,5,9,8,9,4,3,0,1,9,8,7,6,5,4,5,6,8,9,9,8,9,3,2,1,2,3,4,9,8,9,6,8,6,9,8,7,6,3,2,3,4,5,6,7,9,7,6,5,4,5,2,4,6,9,8,7,6,6,7,9,9,9,9,7,8,9},
{9,9,8,7,3,2,1,2,9,8,9,8,5,4,3,0,1,9,9,8,7,5,6,7,8,9,9,9,8,7,6,5,4,3,4,9,7,9,9,2,1,2,4,9,8,9,6,5,6,7,9,9,9,9,7,5,3,2,3,4,6,8,9,8,7,8,7,9,9,6,5,4,3,4,5,7,7,9,9,9,9,6,5,6,9,5,6,9,9,8,7,8,9,7,9,8,7,6,7,8},
{8,9,9,8,5,3,2,3,9,7,6,5,4,3,2,1,2,3,4,9,8,9,7,8,9,5,8,9,9,8,7,8,3,2,9,8,6,8,8,9,4,3,4,5,9,8,7,7,9,8,9,9,8,9,8,6,5,3,4,5,7,9,3,9,9,9,8,9,8,7,6,6,8,5,6,8,8,9,9,7,8,9,9,9,8,9,7,8,9,9,8,9,4,6,9,8,6,5,8,3},
{6,9,8,7,5,4,5,4,5,9,8,6,5,4,3,9,3,5,6,9,9,9,8,9,2,3,7,8,9,9,8,5,4,3,9,6,5,6,7,8,9,4,5,9,8,9,9,8,9,9,5,9,7,8,9,8,6,4,5,7,9,3,2,1,0,1,9,1,9,8,7,8,9,6,8,9,9,4,7,6,7,9,8,7,6,7,9,9,9,9,9,4,3,9,8,7,5,4,3,2},
{4,3,9,8,7,5,6,7,6,7,9,8,7,8,9,8,9,6,7,8,9,9,9,4,3,4,6,9,9,9,8,7,9,9,8,6,4,6,9,9,6,5,9,8,7,5,6,9,7,9,4,3,6,7,9,8,7,5,6,8,9,4,3,2,3,2,9,0,9,9,8,9,8,7,9,5,4,3,3,5,9,7,9,9,7,8,9,9,9,8,8,9,2,1,9,9,4,3,2,1},
{9,2,3,9,7,6,7,8,9,8,9,9,8,9,8,7,8,9,8,9,9,8,7,6,4,5,9,8,7,9,9,9,8,6,5,4,3,7,8,9,7,6,9,8,6,4,7,5,6,8,9,2,4,6,7,9,8,8,7,8,9,5,5,3,4,5,8,9,8,7,9,6,9,8,9,3,2,1,2,3,4,5,6,9,8,9,9,8,7,7,7,8,9,9,8,7,6,4,3,4},
{8,9,5,9,8,7,9,9,4,9,7,9,9,8,9,6,9,9,9,8,7,9,8,7,6,9,8,7,6,9,7,8,9,7,6,7,4,6,7,8,9,9,8,7,5,2,2,4,5,7,9,1,3,4,5,7,9,9,8,9,9,9,6,4,5,6,7,9,9,6,5,4,6,9,5,4,3,2,3,4,5,6,7,8,9,9,9,9,6,5,6,7,8,9,9,8,9,6,4,5},
{7,8,9,9,9,8,9,2,3,4,6,9,8,7,8,5,8,7,8,9,6,5,9,9,8,9,9,6,5,4,6,9,9,8,8,6,5,6,7,9,2,1,9,5,4,1,0,2,4,6,8,9,8,5,9,8,9,2,9,9,9,8,9,5,6,7,9,7,5,4,3,2,3,5,9,8,4,3,5,6,9,7,9,9,9,8,9,8,7,4,3,2,3,4,6,9,8,7,5,7},
{6,9,8,8,9,9,5,3,4,5,9,8,7,6,5,4,6,6,7,8,9,4,3,1,9,9,9,8,4,3,4,8,6,9,9,8,6,7,8,9,9,9,7,4,3,2,1,2,3,4,9,9,7,6,7,8,9,1,2,9,8,7,8,9,7,9,8,7,6,5,4,3,4,9,8,7,6,4,6,7,8,8,9,4,8,7,9,9,8,6,5,4,5,9,7,8,9,8,7,8},
{5,5,6,7,9,7,6,9,8,6,8,9,6,5,4,3,4,5,6,7,9,6,1,0,1,9,8,9,3,2,2,6,4,6,9,8,7,9,9,9,8,7,6,5,4,3,2,3,4,5,7,8,9,7,9,9,1,0,9,8,9,6,9,8,9,9,9,8,7,6,5,4,5,6,9,8,7,5,7,8,9,9,2,3,5,6,8,9,8,7,9,8,7,8,9,9,9,9,8,9},
{3,4,7,8,9,8,7,8,9,7,9,8,9,5,5,2,3,6,7,9,9,7,4,2,9,8,7,8,9,1,0,2,3,5,6,9,8,9,8,9,9,8,9,6,5,4,3,4,5,6,8,9,9,8,9,4,2,9,8,7,8,5,6,7,8,9,9,9,8,9,8,5,6,7,8,9,8,9,8,9,1,0,1,4,9,7,9,3,9,9,9,9,8,9,9,8,9,9,9,4},
{1,5,6,7,8,9,8,9,3,9,8,7,8,4,2,1,0,5,8,7,8,9,6,9,8,6,6,7,9,2,1,2,3,4,5,6,9,8,7,5,2,9,8,7,6,5,4,6,8,7,8,9,9,9,6,5,6,7,9,6,8,3,4,5,6,8,9,9,9,8,7,6,7,9,9,8,9,9,9,3,2,1,9,9,8,9,3,2,3,4,9,9,9,5,6,7,8,9,4,3},
{2,3,4,9,8,9,9,0,2,4,9,6,5,4,3,4,1,4,5,6,7,8,9,9,9,5,4,9,8,9,2,3,4,5,7,8,9,9,4,3,1,2,9,9,7,6,5,7,8,8,9,8,9,8,7,6,9,9,8,5,4,2,5,4,6,7,8,9,9,9,8,7,9,8,7,7,8,9,8,9,3,9,8,9,7,8,9,0,1,9,8,7,8,9,7,8,9,5,3,2},
{3,4,5,6,7,8,9,1,3,9,8,7,7,5,4,3,2,3,4,5,6,7,9,8,7,6,2,3,7,8,9,9,5,9,8,9,8,7,5,4,4,3,4,9,8,7,6,8,9,9,7,6,4,9,8,9,8,7,6,4,3,1,2,3,5,6,7,8,9,9,9,9,8,7,6,5,6,8,7,9,9,8,7,8,6,7,9,1,9,8,7,6,7,9,8,9,4,3,2,1},
{4,5,6,9,9,9,9,2,4,5,9,9,9,8,7,5,6,5,5,7,8,9,8,7,6,4,3,4,5,6,7,8,9,9,9,7,9,8,7,6,7,9,5,6,9,8,9,9,0,9,8,7,6,8,9,9,9,9,7,8,4,3,4,7,8,8,9,9,7,8,9,8,7,6,4,4,6,7,6,7,8,9,6,7,5,6,7,9,8,9,6,5,7,8,9,4,3,2,1,0},
{5,6,7,8,9,6,8,9,9,6,7,8,9,9,8,7,7,6,7,8,9,3,9,8,7,5,4,7,6,9,8,9,9,7,6,6,7,9,8,7,8,9,6,9,9,9,8,9,1,2,9,8,7,9,9,8,9,9,8,9,5,4,5,6,7,8,9,7,6,7,6,9,6,5,3,2,3,4,5,8,9,6,5,6,3,4,9,8,7,6,5,4,5,8,9,6,4,4,2,3},
{6,8,8,9,3,4,5,9,8,9,8,9,2,3,9,9,8,8,9,9,2,1,2,9,7,6,5,8,9,9,9,8,8,9,5,4,3,4,9,8,9,9,9,8,8,9,7,8,9,4,5,9,8,9,8,7,6,7,9,7,6,5,7,7,9,9,7,6,5,4,5,9,5,4,2,1,4,7,6,7,8,9,4,1,2,3,4,9,8,7,6,6,6,7,8,9,6,5,6,9},
{7,8,9,1,2,3,9,8,7,9,9,0,1,4,5,9,9,9,8,9,1,0,1,9,8,7,8,9,9,9,8,7,6,5,4,3,2,1,2,9,9,9,8,7,6,7,6,7,8,9,6,7,9,8,7,6,5,6,9,8,8,7,8,9,9,8,6,5,4,3,9,8,7,5,3,3,4,6,9,9,9,4,2,0,1,2,3,4,9,8,8,7,7,8,9,9,9,6,7,8},
{8,9,9,2,3,9,8,7,6,7,8,9,9,9,9,8,7,6,7,8,9,1,2,3,9,9,9,8,7,6,9,8,7,6,8,2,1,0,1,2,9,8,7,6,5,4,5,6,9,9,8,9,9,9,3,3,4,7,8,9,9,8,9,8,9,9,8,6,6,4,5,9,6,5,4,5,6,7,8,9,5,4,3,5,4,3,4,5,9,9,9,9,8,9,9,9,8,9,8,9},
{9,9,8,9,4,9,9,9,5,6,7,9,8,7,8,7,6,5,6,7,8,9,3,9,9,7,9,7,6,5,4,9,8,7,7,3,2,2,2,3,4,9,8,7,5,3,8,7,8,8,9,9,9,8,2,1,5,6,7,8,9,9,8,7,8,9,9,7,7,9,9,9,7,6,8,7,8,9,9,7,6,5,9,9,8,6,5,6,7,8,9,4,9,9,9,8,7,8,9,9},
{9,8,7,9,9,8,9,8,7,7,9,9,8,6,5,4,5,4,5,9,9,9,9,8,7,5,8,9,5,4,3,5,9,7,6,5,4,3,3,4,9,8,9,7,6,2,6,5,7,7,8,9,8,7,6,2,3,4,9,9,9,8,7,6,7,8,9,8,9,8,7,9,8,9,9,8,9,3,9,8,7,9,8,7,9,9,9,7,8,9,2,3,4,9,8,7,6,7,9,8},
{9,7,6,7,6,7,8,9,8,9,8,7,6,5,4,3,2,3,6,6,7,8,9,9,8,6,7,9,4,2,1,9,9,9,7,7,6,4,5,9,8,7,5,3,2,1,0,4,5,6,7,8,9,8,5,4,5,6,7,8,9,7,6,5,6,8,9,9,8,7,6,5,9,9,9,9,1,2,3,9,8,9,7,6,8,7,8,9,9,4,3,5,8,9,8,6,5,4,5,7},
{9,8,5,4,5,8,9,9,9,6,9,9,8,7,5,2,1,3,4,5,6,7,8,9,9,7,9,8,9,3,9,8,9,8,9,9,7,5,7,9,9,8,6,4,3,2,1,2,3,5,6,7,9,9,6,5,6,7,9,9,8,7,5,4,5,7,9,8,9,8,7,6,7,8,9,9,9,3,4,5,9,8,7,5,7,6,7,8,9,9,8,6,7,8,9,7,4,3,4,5},
{9,9,4,3,4,9,9,8,7,5,6,8,9,8,7,5,2,3,8,9,8,9,9,8,9,9,8,7,8,9,8,7,8,7,9,8,9,7,8,9,9,9,6,5,4,3,4,5,6,9,9,8,9,9,8,6,7,9,9,9,6,5,4,3,4,6,6,7,8,9,8,7,8,9,7,9,8,9,9,9,9,7,6,4,4,5,6,7,8,9,8,7,8,9,9,9,6,6,5,9},
{9,8,7,5,6,7,9,6,5,4,5,7,9,9,5,4,3,4,6,7,9,8,7,7,6,8,9,6,9,8,9,6,5,5,8,7,8,9,9,9,9,9,9,6,5,8,5,6,7,8,9,9,9,8,9,9,8,9,9,8,9,4,3,2,3,4,5,9,9,4,9,9,9,5,6,9,7,8,7,8,9,5,4,3,2,4,5,6,7,8,9,8,9,8,7,8,9,7,9,8},
{6,9,8,6,9,9,8,9,6,3,2,9,8,7,6,5,4,9,7,9,8,7,5,4,5,9,4,5,6,7,8,9,3,3,3,5,6,9,8,9,8,9,8,7,6,7,6,8,8,9,9,9,8,7,9,8,9,9,8,7,6,5,6,1,2,3,5,8,9,3,2,1,2,4,9,8,6,5,6,7,9,9,5,0,1,2,3,4,5,6,8,9,8,7,6,7,9,9,8,7},
{5,6,9,9,7,7,6,7,9,2,1,2,9,8,9,7,6,7,9,9,8,6,5,3,4,1,2,4,5,6,9,3,2,1,2,3,9,8,7,9,7,8,9,9,7,9,7,9,9,9,9,8,9,6,5,7,8,9,8,6,4,3,1,0,1,2,6,7,8,9,4,2,3,9,8,7,5,4,5,6,9,8,9,1,2,3,5,6,8,9,9,9,7,6,5,6,7,8,9,6},
{6,7,9,8,6,4,5,9,8,9,0,1,2,9,9,8,7,9,8,7,6,5,4,2,1,0,1,2,7,8,9,4,3,2,3,9,8,7,6,5,6,7,8,9,9,4,9,2,1,9,8,7,6,5,4,6,7,8,9,8,6,4,3,2,6,4,5,6,7,8,9,9,9,8,9,5,4,3,5,9,8,7,8,9,4,4,6,7,8,9,9,9,8,8,6,7,8,9,4,5},
{7,8,9,4,5,3,4,5,6,8,9,9,9,1,2,9,8,9,9,8,7,6,5,3,2,1,2,7,6,8,9,9,4,3,4,9,8,7,5,4,5,6,7,8,9,3,2,1,0,1,9,9,8,7,5,7,8,9,9,8,7,8,4,4,5,7,6,7,8,9,9,8,8,7,5,7,3,2,9,8,7,5,7,8,9,5,7,8,9,6,7,8,9,9,9,8,9,2,3,4},
{8,9,8,3,2,1,3,3,4,5,6,7,8,9,3,4,9,8,7,9,8,7,8,4,4,2,3,4,5,6,7,8,9,5,9,7,6,6,2,3,4,5,6,8,9,5,3,3,2,3,4,9,8,7,6,7,9,7,8,9,8,6,5,5,6,8,7,8,9,9,8,7,6,5,3,2,0,1,2,9,6,4,6,7,8,9,9,9,3,5,6,9,7,6,5,9,0,1,2,3},
{9,8,7,6,5,0,1,2,3,5,7,9,9,9,9,9,7,6,5,6,9,8,9,7,7,3,4,6,7,8,8,9,9,9,8,7,5,4,1,2,3,4,6,8,9,6,5,4,6,4,5,6,9,9,7,8,9,6,9,1,9,7,9,8,7,9,8,9,5,4,9,8,7,6,5,3,3,2,9,8,5,3,5,6,8,9,2,0,2,3,9,8,7,6,3,2,1,2,3,4},
{8,7,6,5,4,3,2,4,5,6,7,8,9,9,8,7,5,4,3,5,6,9,7,6,5,4,5,7,8,9,9,9,9,8,7,6,5,3,2,3,4,6,7,9,8,7,6,5,6,8,9,7,9,9,8,9,8,7,9,0,9,8,9,9,8,9,9,8,6,5,6,9,9,8,7,6,5,9,8,7,6,4,6,8,9,3,2,1,2,9,8,7,6,5,4,3,2,3,4,5}
}};

struct Position
{
    constexpr bool operator==(const Position& other) const { return x == other.x and y == other.y; }

    size_t x{0}, y{0};
};

void basinExploration(const Input& input, std::vector<Position>& alreadyVisitedPosition, const Position& currentPosition)
{
    if(std::any_of(std::begin(alreadyVisitedPosition), std::end(alreadyVisitedPosition), [&currentPosition](const auto& position){ return position == currentPosition; })
       or input[currentPosition.x][currentPosition.y] == 9)
    {
        return;
    }
    alreadyVisitedPosition.push_back(currentPosition);

    if(currentPosition.x != 0) { basinExploration(input, alreadyVisitedPosition, {currentPosition.x-1, currentPosition.y}); }
    if(currentPosition.y != 0) { basinExploration(input, alreadyVisitedPosition, {currentPosition.x, currentPosition.y-1}); }
    if(currentPosition.x != input.size()-1) { basinExploration(input, alreadyVisitedPosition, {currentPosition.x+1, currentPosition.y}); }
    if(currentPosition.y != input.front().size()-1) { basinExploration(input, alreadyVisitedPosition, {currentPosition.x, currentPosition.y+1}); }
}

int getBasinSize(const Input& input, const Position& lowPointPosition)
{
    std::vector<Position> alreadyVisitedPosition;
    basinExploration(input, alreadyVisitedPosition, {lowPointPosition.x, lowPointPosition.y});
    return alreadyVisitedPosition.size();
}

int main()
{
    std::vector<int> basinSizes;
    for(size_t i=0; i<input.size(); ++i)
    {
        for(size_t j=0; j<input[i].size(); ++j)
        {
            if(isLowPoint(input, i, j))
            {
                basinSizes.emplace_back(getBasinSize(input, {i, j}));
            }
        }
    }

    std::sort(std::begin(basinSizes), std::end(basinSizes));
    const auto result = basinSizes[basinSizes.size() - 1] * basinSizes[basinSizes.size() - 2] * basinSizes[basinSizes.size() - 3];
    std::cout << "The solution is: " << result << std::endl;
    return 0;
}
